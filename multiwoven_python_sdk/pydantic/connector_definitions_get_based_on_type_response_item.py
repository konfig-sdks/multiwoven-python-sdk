# coding: utf-8

"""
    MultiWoven API

    Open-source Reverse ETL that makes data segmentation, sync and activation both easy and fully secure.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from multiwoven_python_sdk.pydantic.connector_definitions_get_based_on_type_response_item_connector_spec import ConnectorDefinitionsGetBasedOnTypeResponseItemConnectorSpec
from multiwoven_python_sdk.pydantic.connector_definitions_get_based_on_type_response_item_tags import ConnectorDefinitionsGetBasedOnTypeResponseItemTags

class ConnectorDefinitionsGetBasedOnTypeResponseItem(BaseModel):
    tags: typing.Optional[ConnectorDefinitionsGetBasedOnTypeResponseItemTags] = Field(None, alias='tags')

    name: typing.Optional[str] = Field(None, alias='name')

    connector_type: typing.Optional[str] = Field(None, alias='connector_type')

    connector_subtype: typing.Optional[str] = Field(None, alias='connector_subtype')

    documentation_url: typing.Optional[str] = Field(None, alias='documentation_url')

    github_issue_label: typing.Optional[str] = Field(None, alias='github_issue_label')

    icon: typing.Optional[str] = Field(None, alias='icon')

    license: typing.Optional[str] = Field(None, alias='license')

    release_stage: typing.Optional[str] = Field(None, alias='release_stage')

    support_level: typing.Optional[str] = Field(None, alias='support_level')

    connector_spec: typing.Optional[ConnectorDefinitionsGetBasedOnTypeResponseItemConnectorSpec] = Field(None, alias='connector_spec')
    class Config:
        arbitrary_types_allowed = True
