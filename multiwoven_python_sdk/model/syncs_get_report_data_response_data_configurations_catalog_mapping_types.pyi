# coding: utf-8

"""
    MultiWoven API

    Open-source Reverse ETL that makes data segmentation, sync and activation both easy and fully secure.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from multiwoven_python_sdk import schemas  # noqa: F401


class SyncsGetReportDataResponseDataConfigurationsCatalogMappingTypes(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Mapping types for catalog data.
    """


    class MetaOapg:
        
        class properties:
            standard = schemas.StrSchema
        
            @staticmethod
            def static() -> typing.Type['SyncsGetReportDataResponseDataConfigurationsCatalogMappingTypesStatic']:
                return SyncsGetReportDataResponseDataConfigurationsCatalogMappingTypesStatic
        
            @staticmethod
            def template() -> typing.Type['SyncsGetReportDataResponseDataConfigurationsCatalogMappingTypesTemplate']:
                return SyncsGetReportDataResponseDataConfigurationsCatalogMappingTypesTemplate
            __annotations__ = {
                "standard": standard,
                "static": static,
                "template": template,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["standard"]) -> MetaOapg.properties.standard: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["static"]) -> 'SyncsGetReportDataResponseDataConfigurationsCatalogMappingTypesStatic': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["template"]) -> 'SyncsGetReportDataResponseDataConfigurationsCatalogMappingTypesTemplate': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["standard", "static", "template", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["standard"]) -> typing.Union[MetaOapg.properties.standard, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["static"]) -> typing.Union['SyncsGetReportDataResponseDataConfigurationsCatalogMappingTypesStatic', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["template"]) -> typing.Union['SyncsGetReportDataResponseDataConfigurationsCatalogMappingTypesTemplate', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["standard", "static", "template", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        standard: typing.Union[MetaOapg.properties.standard, str, schemas.Unset] = schemas.unset,
        static: typing.Union['SyncsGetReportDataResponseDataConfigurationsCatalogMappingTypesStatic', schemas.Unset] = schemas.unset,
        template: typing.Union['SyncsGetReportDataResponseDataConfigurationsCatalogMappingTypesTemplate', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SyncsGetReportDataResponseDataConfigurationsCatalogMappingTypes':
        return super().__new__(
            cls,
            *args,
            standard=standard,
            static=static,
            template=template,
            _configuration=_configuration,
            **kwargs,
        )

from multiwoven_python_sdk.model.syncs_get_report_data_response_data_configurations_catalog_mapping_types_static import SyncsGetReportDataResponseDataConfigurationsCatalogMappingTypesStatic
from multiwoven_python_sdk.model.syncs_get_report_data_response_data_configurations_catalog_mapping_types_template import SyncsGetReportDataResponseDataConfigurationsCatalogMappingTypesTemplate
